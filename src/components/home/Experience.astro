---
import Typography from "../Typography.astro";
import Badge from "../ui/Badge.astro";
import experience from "../../data/experience.json";
---

<div class="space-y-4">
  <div class="text-center">
    <Typography as="h2" variant="big" color="neutral" class="font-bold">
      Experience
    </Typography>
  </div>

  <div class="timeline">
    <ul>
      {
        experience.map((item, index) => (
          <li data-index={index} class="mb-20">
            <div class="expDesc content opacity-0">
              <Typography as="h3" variant="h3" color="neutral">
                {item.title}
              </Typography>
              <p>{item.description}</p>
              <div
                class={`flex gap-3 flex-wrap mt-2 ${index % 2 === 0 ? "md:justify-end" : ""}`}
              >
                {item.tools.map((tool) => (
                  <Badge icon={tool.icon} label={tool.name} />
                ))}
              </div>
            </div>
            <div class="expDate time expDate opacity-0 time text-white bg-primary-300 shadow-[0_0_0_3px] shadow-primary-400 dark:shadow-primary-400 dark:bg-primary-600">
              <Typography as="h3" variant="medium" color="neutral">
                {item.date}
              </Typography>
            </div>
          </li>
        ))
      }
      <div style="clear: both"></div>
    </ul>
  </div>
</div>

<script>
  // Intersection Observer logic
  document.addEventListener("DOMContentLoaded", () => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (!entry.isIntersecting) return;

          if (entry.target instanceof HTMLElement) {
            const target = entry.target;
            const index = Number(target.dataset.index);
            const expDesc = target.querySelector<HTMLDivElement>("div.expDesc");
            const expDate = target.querySelector<HTMLDivElement>("div.expDate");

            if (index % 2 === 0) {
              expDesc?.classList.add("show-from-left");
              expDate?.classList.add("show-from-right");
            } else {
              expDesc?.classList.add("show-from-right");
              expDate?.classList.add("show-from-left");
            }
          }
        });
      },
      { threshold: 0.5 },
    );

    document
      .querySelectorAll<HTMLLIElement>(".timeline li") // ⬅️ ya tipamos los <li>
      .forEach((el) => observer.observe(el));
  });
</script>

<style>
  /* animation for each timeline item */
  .show-from-left {
    animation-duration: 2s;
    animation-fill-mode: both;
    animation-name: show-from-left;
  }

  @keyframes show-from-left {
    0% {
      opacity: 0;
      transform: translateX(-200px);
    }

    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }

  .show-from-right {
    animation-duration: 2s;
    animation-fill-mode: both;
    animation-name: show-from-right;
  }

  @keyframes show-from-right {
    0% {
      opacity: 0;
      transform: translateX(200px);
    }

    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }

  /* timeline style */
  .timeline {
    position: relative;
    margin: 50px auto;
    padding: 40px 0;
    width: 1000px;
    box-sizing: border-box;
  }
  .timeline:before {
    content: "";
    position: absolute;
    left: 50%;
    width: 2px;
    height: 100%;
    background-color: rgb(229, 231, 235);
  }
  .timeline ul {
    padding: 0;
    margin: 0;
  }
  .timeline ul li {
    list-style: none;
    position: relative;
    width: 50%;
    padding: 20px 40px;
    box-sizing: border-box;
  }
  .timeline ul li:nth-child(odd) {
    float: left;
    text-align: right;
    clear: both;
  }
  .timeline ul li:nth-child(even) {
    float: right;
    text-align: left;
    clear: both;
  }
  .content {
    padding-bottom: 20px;
  }
  .timeline ul li:nth-child(odd):before {
    content: "";
    position: absolute;
    width: 10px;
    height: 10px;
    top: 24px;
    right: -6px;
    border-radius: 50%;
    box-shadow: 0 0 0 3px;
    background-color: rgb(74, 222, 128);
    box-shadow-color: rgb(187, 247, 208);
  }
  .timeline ul li:nth-child(even):before {
    content: "";
    position: absolute;
    width: 10px;
    height: 10px;
    top: 24px;
    left: -4px;
    border-radius: 50%;
    box-shadow: 0 0 0 3px;
    background-color: rgb(74, 222, 128);
    box-shadow-color: rgb(187, 247, 208);
  }
  .timeline ul li h3 {
    padding: 0;
    margin: 0;
    font-weight: 600;
  }
  .timeline ul li p {
    margin: 10px 0 0;
    padding: 0;
  }
  .timeline ul li .time h4 {
    margin: 0;
    padding: 0;
    font-size: 14px;
  }
  .timeline ul li .time {
    position: absolute;
    top: 12px;
    margin: 0;
    padding: 8px 16px;
    border-radius: 18px;
    color: white;
  }

  .timeline ul li:nth-child(odd) .time {
    right: -220px;
  }
  .timeline ul li:nth-child(even) .time {
    left: -220px;
  }

  /* media queries */
  @media (max-width: 1000px) {
    .timeline {
      width: 100%;
    }
  }
  @media (max-width: 767px) {
    .show-from-left {
      animation-name: show-from-right;
    }
    .timeline {
      width: 100%;
      padding-bottom: 0;
    }
    h1 {
      font-size: 40px;
      text-align: center;
    }
    .timeline:before {
      left: 20px;
      height: 100%;
    }
    .timeline ul li:nth-child(odd),
    .timeline ul li:nth-child(even) {
      width: 100%;
      text-align: left;
      padding-left: 50px;
      padding-bottom: 50px;
    }
    .timeline ul li:nth-child(odd):before,
    .timeline ul li:nth-child(even):before {
      top: -18px;
      left: 16px;
    }
    .timeline ul li:nth-child(odd) .time,
    .timeline ul li:nth-child(even) .time {
      top: -30px;
      left: 50px;
      right: inherit;
    }
  }
</style>
